name: Prisma Cloud Compute Image Scan

on: [push, pull_request]

env:
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}

jobs:
  # Jobs are ran independently from each other, so build and scan needs to be in a single job.
  build-and-scan:
    name: Build and scan image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        # Defaults are sufficient generally
        # https://github.com/actions/checkout#usage

      - name: Download twistcli from the Prisma Cloud Compute Console
        run: |
          crtx_resp=$(curl -s "https://api-japac-cxsiamp.xdr.jp.paloaltonetworks.com/public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64" -H "x-xdr-auth-id: ${{ secrets.PCC_USER }}" -H "Authorization: ${{ secrets.PCC_PASS }}") && crtx_url=$(echo $crtx_resp | jq -r ".signed_url") && crtx_file=$(echo $crtx_resp | jq -r ".file_name") && curl -o $crtx_file $crtx_url 
          chmod a+x ./cortexcli

      - name: Build the image
        run: |
          mkdir -p /home/runner/work/raymond/raymond/
          cat <<EOF | tee /home/runner/work/raymond/raymond/Dockerfile
          FROM nginx:1.21
          EXPOSE 80
          RUN apt-get update && apt-get upgrade -y
          RUN useradd -ms /bin/bash myuser
          USER myuser
          CMD ["nginx", "-g", "daemon off;"]
          EOF
          docker build -t $IMAGE_NAME /home/runner/work/raymond/raymond/

      - name: Scan the image
        run: ./cortexcli --api-base-url "https://api-japac-cxsiamp.xdr.jp.paloaltonetworks.com" --api-key-id "${{ secrets.PCC_USER }}"  --api-key "${{ secrets.PCC_PASS }}" image scan "$IMAGE_NAME"
