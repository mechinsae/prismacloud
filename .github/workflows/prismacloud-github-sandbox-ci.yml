name: Prisma Cloud Compute Image Scan

on: [push, pull_request]

env:
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}

jobs:
  # Jobs are ran independently from each other, so build and scan needs to be in a single job.
  build-and-scan:
    name: Build and scan image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        # Defaults are sufficient generally
        # https://github.com/actions/checkout#usage

      - name: Download twistcli from the Prisma Cloud Compute Console
        run: |
          curl --insecure --user ${{ secrets.PCC_USER }}:${{ secrets.PCC_PASS }} --output ./twistcli ${{ secrets.PCC_CONSOLE_URL }}/api/v1/util/twistcli
          chmod a+x ./twistcli

      - name: Build the image
        run: |
          cat <<EOF | tee ${{ github.workspace }}/Dockerfile
          FROM nginx:1.21
          EXPOSE 80
          CMD ["nginx", "-g", "daemon off;"]
          EOF
          docker build -t $IMAGE_NAME .

      - name: Scan the image
        run: ./twistcli images scan --address ${{ secrets.PCC_CONSOLE_URL }} --user ${{ secrets.PCC_USER }} --password ${{ secrets.PCC_PASS }} --details $IMAGE_NAME


# 추가 부분      
      - name: Scan the dynamic image analysis
        run: | 
          sudo ./twistcli sandbox --address ${{ secrets.PCC_CONSOLE_URL }} --token ${{ secrets.PCC_API_TOKEN }} --user ${{ secrets.PCC_USER }} --password ${{ secrets.PCC_PASS }} --analysis-duration 10s --exit-on-error  $IMAGE_NAME | tee -a output
          if grep -i 'Sandbox analysis verdict: FAIL' ${{ github.workspace }}/output ; then
            echo "The dynamic image analysis result is FAIL."
            exit 1
          else
            echo "The dynamic image analysis result is PASS"
          fi
